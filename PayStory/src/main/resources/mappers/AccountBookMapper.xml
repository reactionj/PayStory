<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.AourZ.PayStory.dao.IAccountBookDAO">
	<!-- 공유 가계부 -->
	<resultMap type="com.AourZ.PayStory.model.ShareAccountBookVO" id="shareMemberList">
		<result property="owner" column="owner"></result>
		<result property="participant" column="participant"></result>
		<result property="accountBookNo" column="accountBookNo"></result>
	</resultMap>
	
	<!-- 태그별 총 건수, 총 금액 -->
	<resultMap type="com.AourZ.PayStory.model.TagTotalVO" id="tagTotalList">
		<result property="date" column="fdate"></result>
		<result property="tag" column="tagNo"></result>
		<result property="count" column="count"></result>
		<result property="sum" column="sum"></result>
	</resultMap>
	
	<!-- 게시글 -->
	<resultMap type="com.AourZ.PayStory.model.BoardVO" id="boardList">
		<result property="boardNo" column="boardNo"></result>
		<result property="boardTitle" column="boardTitle"></result>
		<result property="boardDate" column="boardDate"></result>
		<result property="boardViews" column="boardViews"></result>
		<result property="boardContents" column="boardContents"></result>
		<result property="boardFile" column="boardFile"></result>
		<result property="memberNo" column="memberNo"></result>
		<result property="boardCategoryNo" column="boardCategoryNo"></result>
	</resultMap>
	
	<!-- 내 가계부 조회 -->
	<select id="getMyAccountBook" parameterType="HashMap" resultType="com.AourZ.PayStory.model.AccountBookVO">
		SELECT *
		FROM account_book
		WHERE memberNo = #{memberNo} AND isShared = #{isShared}
	</select>
	
	<!-- 공유 가계부 조회 -->
	<select id="getShareAccountBook" parameterType="int" resultType="com.AourZ.PayStory.model.AccountBookVO">
		SELECT *
		FROM account_book
		WHERE accountBookNo = #{accountBookNo}
	</select>
	
	<!-- 가계부 예산 조회 -->
	<select id="getAccountBookBudget" parameterType="HashMap" resultType="com.AourZ.PayStory.model.AccountBookBudgetVO">
		SELECT budgetAmount
		FROM account_book_budget
		WHERE accountBookNo = #{accountBookNo} AND DATE_FORMAT(budgetDate, '%Y-%m') = #{date}
	</select>
	
	<!-- 공유 가계부 소유자, 참여자 조회 -->
	<select id="getShareMemberList" parameterType="int" resultMap="shareMemberList">
		SELECT *
		FROM share_account_book
		WHERE accountBookNo = #{accountBookNo}
	</select>
	
	<!-- 회원 정보 조회 -->
	<select id="getMemberInfo" parameterType="String" resultType="com.AourZ.PayStory.model.MemberVO">
		SELECT *
		FROM member
		WHERE memberNo = #{memberNo}
	</select>
	
	<!-- 수입 - 총 개수, 총 금액 조회 -->
	<select id="getIncomeList" parameterType="HashMap" resultMap="tagTotalList">
		<choose>
			<when test="select.equals('tag')">
				<choose>
					<when test="group.equals('year')">
						SELECT DATE_FORMAT(incomeDate, '%Y') AS fDate, tagNo, COUNT(*) AS count, SUM(incomeAmount) AS sum
					</when>
					<when test="group.equals('month')">
						SELECT DATE_FORMAT(incomeDate, '%Y-%m') AS fDate, tagNo, COUNT(*) AS count, SUM(incomeAmount) AS sum
					</when>
					<when test="group.equals('day')">
						SELECT DATE_FORMAT(incomeDate, '%Y-%m-%d') AS fDate, tagNo, COUNT(*) AS count, SUM(incomeAmount) AS sum
					</when>
				</choose>
				FROM income
				WHERE accountBookNo = #{accountBookNo}
				GROUP BY fDate, tagNo
				HAVING fDate LIKE CONCAT(#{date}, '%')
				ORDER BY fDate ASC
			</when>
			<when test="select.equals('date')">
				<choose>
					<when test="group.equals('year')">
						SELECT DATE_FORMAT(incomeDate, '%Y') AS fDate, COUNT(*) AS count, SUM(incomeAmount) AS sum
					</when>
					<when test="group.equals('month')">
						SELECT DATE_FORMAT(incomeDate, '%Y-%m') AS fDate, COUNT(*) AS count, SUM(incomeAmount) AS sum
					</when>
					<when test="group.equals('day')">
						SELECT DATE_FORMAT(incomeDate, '%Y-%m-%d') AS fDate, COUNT(*) AS count, SUM(incomeAmount) AS sum
					</when>
				</choose>
				FROM income
				WHERE accountBookNo = #{accountBookNo}
				GROUP BY fDate
				HAVING fDate LIKE CONCAT(#{date}, '%')
				ORDER BY fDate ASC
			</when>
		</choose>
	</select>
	
	<!-- 지출 - 총 개수, 총 금액 조회 -->
	<select id="getExpenditureList" parameterType="HashMap" resultMap="tagTotalList">
		<choose>
			<when test="select.equals('tag')">
				<choose>
					<when test="group.equals('year')">
						SELECT DATE_FORMAT(expenditureDate, '%Y') AS fDate, tagNo, COUNT(*) AS count, SUM(expenditureAmount) AS sum
					</when>
					<when test="group.equals('month')">
						SELECT DATE_FORMAT(expenditureDate, '%Y-%m') AS fDate, tagNo, COUNT(*) AS count, SUM(expenditureAmount) AS sum
					</when>
					<when test="group.equals('day')">
						SELECT DATE_FORMAT(expenditureDate, '%Y-%m-%d') AS fDate, tagNo, COUNT(*) AS count, SUM(expenditureAmount) AS sum
					</when>
				</choose>
				FROM expenditure
				WHERE accountBookNo = #{accountBookNo}
				GROUP BY fDate, tagNo
				HAVING fDate LIKE CONCAT(#{date}, '%')
				ORDER BY fDate ASC
			</when>
			<when test="select.equals('date')">
				<choose>
					<when test="group.equals('year')">
						SELECT DATE_FORMAT(expenditureDate, '%Y') AS fDate, COUNT(*) AS count, SUM(expenditureAmount) AS sum
					</when>
					<when test="group.equals('month')">
						SELECT DATE_FORMAT(expenditureDate, '%Y-%m') AS fDate, COUNT(*) AS count, SUM(expenditureAmount) AS sum
					</when>
					<when test="group.equals('day')">
						SELECT DATE_FORMAT(expenditureDate, '%Y-%m-%d') AS fDate, COUNT(*) AS count, SUM(expenditureAmount) AS sum
					</when>
				</choose>
				FROM expenditure
				WHERE accountBookNo = #{accountBookNo}
				GROUP BY fDate
				HAVING fDate LIKE CONCAT(#{date}, '%')
				ORDER BY fDate ASC
			</when>
		</choose>
	</select>
	
	<!-- 태그명 조회 -->
	<select id="getTagName" parameterType="String" resultType="String">
		SELECT tagName
		FROM tag
		WHERE tagNo = #{tagNo}
	</select>
	
	<!-- 게시글 목록 조회 -->
	<select id="getBoardList" parameterType="HashMap" resultMap="boardList">
		SELECT *
		FROM board
		<choose>
			<when test="allCheck eq false"> <!-- 공지사항 -->
				WHERE boardCategoryNo = #{boardCategoryNo}
			</when>
			<otherwise> <!-- 전체 -->
				WHERE boardCategoryNo != #{boardCategoryNo}
			</otherwise>
		</choose>
		ORDER BY boardDate DESC
		LIMIT 6
	</select>
	
	<!-- 게시판 카테고리 이름 조회 -->
	<select id="getBoardCategoryName" parameterType="String" resultType="String">
		SELECT boardCategoryName
		FROM board_category
		WHERE boardCategoryNo = #{boardCategoryNo}
	</select>
  
	<!-- 수입 내역 추가 -->
	<insert id="insertIncome" parameterType="com.AourZ.PayStory.model.IncomeVO" useGeneratedKeys="true" keyProperty="incomeNo">
		INSERT INTO income 
			(incomeDate, incomeSource, incomeMemo, incomeAmount, tagNo) 
		VALUES
			(#{incomeDate}, #{incomeSource}, #{incomeMemo}, #{incomeAmount}, #{tagNo})
	</insert>

	<!-- 지출 내역 추가 -->
	<insert id="insertExpenditure" parameterType="map" useGeneratedKeys="true" keyProperty="expenditureNo">
		INSERT INTO expenditure 
			(expenditureDate, expenditureImage, expenditureSource, expenditureMemo, expenditureAmount, expenditureAddress, tagNo) 
		VALUES
			(#{expenditureDate}, #{expenditureImage}, #{expenditureSource}, #{expenditureMemo}, #{expenditureAmount}, #{expenditureAddress}, #{tagNo})
	</insert>

	<!-- 지출 아이템 추가 -->
	<insert id="insertExpenditureItem" parameterType="list">
		INSERT INTO expenditure_item
			(expenditureItemName, expenditureItemPrice, expenditureNo) 
		VALUES
			<foreach collection="list" item="item" separator=",">
				(#{item.expenditureItemName}, #{item.expenditureItemPrice}, #{item.expenditureNo})
			</foreach>
	</insert>
</mapper>